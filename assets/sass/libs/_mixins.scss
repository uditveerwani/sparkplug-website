/// Makes an element's :before pseudoelement a FontAwesome icon.
/// @param {string} $content Optional content value to use.
@mixin icon($content: false) {

	text-decoration: none;

	&:before {

		@if $content {
			content: $content;
		}

		-moz-osx-font-smoothing: grayscale;
		-webkit-font-smoothing: antialiased;
		font-family: FontAwesome;
		font-style: normal;
		font-weight: normal;
		text-transform: none !important;

	}

}

/// Applies padding to an element, taking the current element-margin value into account.
/// @param {mixed} $tb Top/bottom padding.
/// @param {mixed} $lr Left/right padding.
/// @param {list} $pad Optional extra padding (in the following order top, right, bottom, left)
/// @param {bool} $important If true, adds !important.
@mixin padding($tb, $lr, $pad: (0,0,0,0), $important: null) {

	@if $important {
		$important: '!important';
	}

	padding: ($tb + nth($pad,1)) ($lr + nth($pad,2)) max(0.1em, $tb - _size(element-margin) + nth($pad,3)) ($lr + nth($pad,4)) #{$important};

}

@mixin keyframes($name) {
	@-moz-keyframes #{$name} { @content; }
	@-webkit-keyframes #{$name} { @content; }
	@-ms-keyframes #{$name} { @content; }
	@keyframes #{$name} { @content; }
}

@mixin loader($color: #4686a0) {
	margin: 0 auto 0;
	text-align: center;

	> div {
		width: 18px;
		height: 18px;
		background-color: $color;
		margin: 0 2px;

		border-radius: 100%;
		display: inline-block;
		-webkit-animation: bouncedelay 1.4s infinite ease-in-out both;
		animation: bouncedelay 1.4s infinite ease-in-out both;

		&:first-child {
			margin-left: -2px;

			-webkit-animation-delay: -0.32s;
  			animation-delay: -0.32s;
		}

		&:nth-child(2) {
			-webkit-animation-delay: -0.16s;
  			animation-delay: -0.16s;
		}
	}

	@include keyframes(bouncedelay) {
		0%, 80%, 100% {
			-webkit-transform: scale(0);
			transform: scale(0);
		} 40% {
			-webkit-transform: scale(0.8);
			transform: scale(0.8);
		}
	}
}
